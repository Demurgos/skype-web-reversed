(function (e) {
  if (typeof module == "object" && typeof module.exports == "object") {
    var t = e(require, exports);
    t !== undefined && (module.exports = t);
  } else
    typeof define == "function" && define.amd && define("swx-jskype-main/lib/utils/preferences/config", [
      "require",
      "exports",
      "swx-enums",
      "swx-jskype-internal-application-instance",
      "swx-constants",
      "../../../lib/services/preferences/localStorageProvider",
      "../../../lib/services/preferences/autoBuddyProvider",
      "../../../lib/services/preferences/profileServiceProvider",
      "../../../lib/services/preferences/flagsServiceProvider",
      "../../../lib/services/preferences/defaultToTrueFlagProvider",
      "../../../lib/services/preferences/callPolicyProvider",
      "../../../lib/services/preferences/videoPolicyProvider",
      "../../../lib/services/preferences/readReceiptsProvider"
    ], e);
}(function (e, t) {
  var n = e("swx-enums"), r = e("swx-jskype-internal-application-instance"), i = e("swx-constants"), s = e("../../../lib/services/preferences/localStorageProvider"), o = e("../../../lib/services/preferences/autoBuddyProvider"), u = e("../../../lib/services/preferences/profileServiceProvider"), a = e("../../../lib/services/preferences/flagsServiceProvider"), f = e("../../../lib/services/preferences/defaultToTrueFlagProvider"), l = e("../../../lib/services/preferences/callPolicyProvider"), c = e("../../../lib/services/preferences/videoPolicyProvider"), h = e("../../../lib/services/preferences/readReceiptsProvider"), p = i.COMMON.featureFlags, d = i.COMMON.userSettings.preferences, v = n.skypeFlagsApiMappings, m = n.preferenceType;
  t.preferences = [];
  t.preferences.push({
    featureFlag: p.URL_PREVIEWS,
    id: d.URL_PREVIEWS,
    type: m.Boolean,
    provider: {
      builder: f,
      args: [v.URL_PREVIEWS]
    },
    defaultValue: !0
  });
  t.preferences.push({
    featureFlag: p.YOUTUBE_PLAYER_ENABLED,
    id: d.YOUTUBE_PLAYER,
    type: m.Boolean,
    provider: {
      builder: a,
      args: [v.YOUTUBE_PLAYER]
    },
    defaultValue: !1
  });
  t.preferences.push({
    featureFlag: p.URL_PREVIEW_LOAD_YOUTUBE_PLAYER,
    id: d.YOUTUBE_PLAYER,
    type: m.Boolean,
    provider: {
      builder: a,
      args: [v.YOUTUBE_PLAYER]
    },
    defaultValue: !1
  });
  t.preferences.push({
    featureFlag: p.MENTIONS_ENABLED,
    id: d.MENTIONS,
    type: m.Boolean,
    provider: {
      builder: f,
      args: [v.MENTIONS]
    },
    defaultValue: !0
  });
  t.preferences.push({
    featureFlag: p.FILE_PASTE_ENABLED,
    id: d.FILE_PASTE,
    type: m.Boolean,
    provider: {
      builder: a,
      args: [v.FILE_PASTE]
    },
    defaultValue: !1
  });
  t.preferences.push({
    featureFlag: p.TYPING_INDICATOR_ENABLED,
    id: d.TYPING_INDICATOR,
    type: m.Boolean,
    provider: {
      builder: f,
      args: [v.TYPING_INDICATOR]
    },
    defaultValue: !0
  });
  t.preferences.push({
    featureFlag: p.SKYPE_CALL_POLICY_SUPPORT,
    id: d.SKYPE_CALL_POLICY_SUPPORT,
    type: m.CallPolicy,
    provider: { builder: l },
    defaultValue: n.privacyPolicyValues.Anyone
  });
  t.preferences.push({
    featureFlag: p.SKYPE_VIDEO_CALLING_POLICY_SUPPORT,
    id: d.SKYPE_VIDEO_CALLING_POLICY_SUPPORT,
    type: m.VideoPolicy,
    provider: { builder: c },
    defaultValue: n.privacyPolicyValues.Anyone
  });
  t.preferences.push({
    featureFlag: p.READ_RECEIPT_ENABLED,
    id: d.READ_RECEIPT,
    type: m.Boolean,
    provider: { builder: h },
    defaultValue: !1
  });
  t.preferences.push({
    featureFlag: p.SHOW_EMOTICON_SUGGESTIONS_SETTINGS,
    id: d.EMOTICON_SUGGESTIONS,
    type: m.Boolean,
    provider: {
      builder: a,
      args: [n.skypeFlagsApiMappings.SHOW_EMOTICON_SUGGESTIONS_SETTINGS]
    },
    defaultValue: !0
  });
  t.preferences.push({
    featureFlag: p.EMOTICON_SETTINGS_ENABLED,
    id: d.SHOW_EMOTICONS,
    type: m.Boolean,
    provider: {
      builder: f,
      args: [n.skypeFlagsApiMappings.SHOW_EMOTICONS]
    },
    defaultValue: !0
  });
  t.preferences.push({
    featureFlag: p.SHORT_CIRCUIT_SUPPORT,
    id: d.AUTO_BUDDY,
    type: m.AutoBuddy,
    provider: { builder: o },
    isDisplayable: function () {
      return r.get().personsAndGroupsManager.mePerson._isLinkedMsaAutoGenerated.get().then(function (e) {
        return Promise.resolve(!e);
      }, function () {
        return Promise.resolve(!0);
      });
    },
    defaultValue: !1,
    getDisabled: !0
  });
  t.preferences.push({
    featureFlag: p.SHORT_CIRCUIT_SUPPORT,
    id: d.AUTO_BUDDY_DISCOVERY,
    type: m.AutoBuddyDiscovery,
    provider: { builder: u },
    defaultValue: !1,
    disableReporting: !0,
    getDisabled: !0
  });
  t.preferences.push({
    featureFlag: p.CHAT_NOTIFICATIONS_SETTINGS_ENABLED,
    id: d.NOTIFICATIONS,
    type: m.Notifications,
    provider: {
      builder: f,
      args: [n.skypeFlagsApiMappings.NOTIFICATIONS]
    }
  });
  t.preferences.push({
    featureFlag: p.NOTIFICATIONS_SOUNDS_SETTING_ENABLED,
    id: d.NOTIFICATIONS_SOUND,
    type: m.Notifications,
    provider: {
      builder: f,
      args: [n.skypeFlagsApiMappings.NOTIFICATIONS_SOUND]
    }
  });
  t.preferences.push({
    featureFlag: p.RINGING_DEFERRING,
    id: d.DEFER_RINGING_SOUND,
    type: m.RingingDeferrer,
    provider: {
      builder: s,
      args: [i.COMMON.storageKeys.RINGING_DEFERRER_SETTINGS_KEY]
    }
  });
  t.preferences.push({
    featureFlag: p.CHAT_NOTIFICATIONS_SOUND_SETTINGS_ENABLED,
    id: d.CHAT_NOTIFICATIONS_SOUND,
    type: m.Notifications,
    provider: {
      builder: f,
      args: [n.skypeFlagsApiMappings.CHAT_NOTIFICATIONS_SOUND]
    }
  });
  t.preferences.push({
    featureFlag: p.CALL_NOTIFICATIONS_SETTINGS_ENABLED,
    id: d.CALL_NOTIFICATIONS,
    type: m.Notifications,
    provider: {
      builder: f,
      args: [n.skypeFlagsApiMappings.CALL_NOTIFICATIONS]
    }
  });
  t.preferences.push({
    featureFlag: p.CALL_NOTIFICATIONS_SOUND_SETTINGS_ENABLED,
    id: d.CALL_NOTIFICATIONS_SOUND,
    type: m.Notifications,
    provider: {
      builder: f,
      args: [n.skypeFlagsApiMappings.CALL_NOTIFICATIONS_SOUND]
    }
  });
  t.preferences.push({
    featureFlag: p.EMOTICON_SETTINGS_ENABLED,
    id: d.SHOW_ANIMATED_EMOTICONS,
    type: m.Boolean,
    provider: {
      builder: f,
      args: [n.skypeFlagsApiMappings.SHOW_ANIMATED_EMOTICONS]
    },
    defaultValue: !0
  });
  t.preferences.push({
    featureFlag: p.EMOTICON_SETTINGS_ENABLED,
    id: d.SHOW_LARGE_EMOTICONS,
    type: m.Boolean,
    provider: {
      builder: f,
      args: [n.skypeFlagsApiMappings.SHOW_LARGE_EMOTICONS]
    },
    defaultValue: !0
  });
  t.preferences.push({
    featureFlag: p.DARK_THEME_ENABLED,
    id: d.DARK_THEME,
    type: m.Boolean,
    provider: {
      builder: a,
      args: [n.skypeFlagsApiMappings.DARK_THEME]
    },
    defaultValue: !1
  });
  t.preferences.push({
    featureFlag: p.VIDEO_AUTOPLAY_SETTINGS_ENABLED,
    id: d.VIDEO_AUTOPLAY,
    type: m.Boolean,
    provider: {
      builder: f,
      args: [n.skypeFlagsApiMappings.VIDEO_AUTOPLAY]
    },
    defaultValue: !0
  });
}));
